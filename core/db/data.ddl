/*-------------------------------------------------------------*/
/*                           SEQUENCE                          */
/*-------------------------------------------------------------*/

CREATE SEQUENCE IF NOT EXISTS SF_SEQUENCE START 1;

/*-------------------------------------------------------------*/
/*                 CUSTOM DICTIONARIES                         */
/*-------------------------------------------------------------*/

CREATE TABLE IF NOT EXISTS D_CURRENCIES (
  ID BIGINT PRIMARY KEY NOT NULL,
  CODE VARCHAR(16) NOT NULL,
  NAME VARCHAR(64) NOT NULL,
  AMOUNT_SCALE BIGINT);

COMMENT ON TABLE D_CURRENCIES IS 'Currencies dictionary';
COMMENT ON COLUMN D_CURRENCIES.ID IS 'Primary Key';
COMMENT ON COLUMN D_CURRENCIES.CODE IS 'ISO currency code';
COMMENT ON COLUMN D_CURRENCIES.NAME IS 'Currency description';
COMMENT ON COLUMN D_CURRENCIES.AMOUNT_SCALE IS 'Amount number of decimal places (ISO)';

CREATE TABLE IF NOT EXISTS D_PERSONS (
	ID BIGINT NOT NULL,
    FIRST_NAME VARCHAR(255) NOT NULL, /* ИМЯ */
    LAST_NAME VARCHAR(255) NULL, /* ФАМИЛИЯ */
    MIDDLE_NAME VARCHAR(255) NULL, /* ОТЧЕСТВО */
    COUNTRY_ISO_CODE_2 CHAR(2) DEFAULT 'RU' NOT NULL,
	PHONE_NUMBER VARCHAR(30) NULL, /* (999) 111-11-11 */
    EMAIL VARCHAR(255) NULL, /* A@A.RU */
    CONSTRAINT SR_PERSON_UQ UNIQUE (COUNTRY_ISO_CODE_2, PHONE_NUMBER, EMAIL),
	PRIMARY KEY(ID)
);

COMMENT ON TABLE D_PERSONS IS 'D_PERSONS';
COMMENT ON COLUMN D_PERSONS.ID IS 'Primary Key';

CREATE TABLE D_CUSTOMERS (
	ID BIGINT NOT NULL, /* ИДЕНТИФИКАТОР */
	PERSON_ID BIGINT NULL, /* ПЕРСОНА */
    STATUS VARCHAR(10) DEFAULT 'A' NOT NULL, /* СТАТУС */
	DATE_ADDED TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, /* ДАТА СОЗДАНИЯ */
    PRIMARY KEY (ID)
);

COMMENT ON TABLE D_CUSTOMERS IS 'D_PERSONS';
COMMENT ON COLUMN D_CUSTOMERS.ID IS 'Primary Key';

ALTER TABLE D_CUSTOMERS
    ADD CONSTRAINT FK_D_CUSTOMERS_PERSON_ID FOREIGN KEY (PERSON_ID)
    REFERENCES D_PERSONS (ID);

CREATE TABLE IF NOT EXISTS D_OPERATES (
  ID BIGINT PRIMARY KEY NOT NULL,
  CODE VARCHAR(16) NOT NULL,
  NAME VARCHAR(64) NOT NULL);

COMMENT ON TABLE D_OPERATES IS 'TYPES OPERATES';
COMMENT ON COLUMN D_OPERATES.ID IS 'Primary Key';

/*-------------------------------------------------------------*/
/*                 BUSINESS TABLES                             */
/*-------------------------------------------------------------*/

CREATE TABLE SF_BALANCES (
	ID BIGINT NOT NULL, /* ИДЕНТИФИКАТОР */
	CUSTOMER_ID BIGINT NULL,
	AMOUNT NUMERIC(25,7) NOT NULL,
    CUR_ID BIGINT NOT NULL,
    STATUS VARCHAR(10) DEFAULT 'A' NOT NULL, /* СТАТУС */
	DATE_ADDED TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, /* ДАТА СОЗДАНИЯ */
	DATE_MODIFIED TIMESTAMP NULL,
    PRIMARY KEY (ID)
);

COMMENT ON TABLE SF_BALANCES IS 'CUSTOMER ACCOUNT';
COMMENT ON COLUMN SF_BALANCES.ID IS 'Primary Key';

ALTER TABLE SF_BALANCES ADD CONSTRAINT FK_SF_BALANCE_CUR_ID FOREIGN KEY (CUR_ID) REFERENCES D_CURRENCIES (ID);

CREATE TABLE SF_OPERATES (
	ID BIGINT NOT NULL,
	DEBT_ACC_ID BIGINT NULL,
	CRED_ACC_ID BIGINT NULL,
	OPERATE_ID BIGINT NOT NULL,
	AMOUNT NUMERIC(25,7) NOT NULL,
	CUR_ID BIGINT NOT NULL,
	DATE_ADDED TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
	DATE_MODIFIED TIMESTAMP NULL,
    PRIMARY KEY (ID)
);

COMMENT ON TABLE SF_OPERATES IS 'ACCOUNT OPERATES';
COMMENT ON COLUMN SF_OPERATES.ID IS 'Primary Key';

ALTER TABLE SF_OPERATES ADD CONSTRAINT FK_SF_OPERATES_CUR_ID FOREIGN KEY (CUR_ID) REFERENCES D_CURRENCIES (ID);
ALTER TABLE SF_OPERATES ADD CONSTRAINT FK_SF_OPERATES_OPERATE_ID FOREIGN KEY (OPERATE_ID) REFERENCES D_OPERATES (ID);
ALTER TABLE SF_OPERATES ADD CONSTRAINT FK_SF_OPERATES_DEBT_ACC_ID FOREIGN KEY (DEBT_ACC_ID) REFERENCES SF_BALANCES (ID);
ALTER TABLE SF_OPERATES ADD CONSTRAINT FK_SF_OPERATES_CRED_ACC_ID FOREIGN KEY (CRED_ACC_ID) REFERENCES SF_BALANCES (ID);